name: elasticsurgery
minKubetoolsVersion: 7.0

containerContexts:
  elasticsurgery:
    build:
      dockerfile: docker/Dockerfile
      preBuildCommands:
        - [rm, -rf, frontend/build/]  # remove any existing
        - [npm, --prefix, frontend/, prune]
        - [npm, --prefix, frontend/, install, --quiet]
        - [npm, --prefix, frontend/, run build]
    dev:
      volumes:
        - ./:/opt/elasticsurgery


tests:
  - name: Run pytest
    containerContext: elasticsurgery
    command: [pytest]


deployments:
  elasticsurgery:
    containers:
      webserver:
        command: [uwsgi, --ini, /etc/uwsgi.conf]
        containerContext: elasticsurgery
        ports:
          - 80
        probes:
          httpGet:
            path: /ping
        dev:
          command: [./backend/boot.py]


dependencies:
  elasticsearch:
    # Dev only
    conditions:
      dev: true
    containers:
      elasticsearch:
        image: elasticsearch:6.8.3
        ports:
          - 9200
        probes:
          exec:
            command: [curl, 'elasticsurgery-elasticsearch:9200']


upgrades:
  - name: Create the .elasticsurgery-clusters index
    conditions:
      dev: true
    containerContext: elasticsurgery
    command: [
      curl, -X, PUT,
      'http://elasticsurgery-elasticsearch:9200/.elasticsurgery-clusters',
      -H, 'Content-Type: application/json',
    ]

  - name: Create the .elasticsurgery-logs index
    conditions:
      dev: true
    containerContext: elasticsurgery
    command: [
      curl, -X, PUT,
      'http://elasticsurgery-elasticsearch:9200/.elasticsurgery-logs',
      -H, 'Content-Type: application/json',
    ]

  - name: Push the .elasticsurgery-clusters/cluster mapping
    conditions:
      dev: true
    containerContext: elasticsurgery
    command: [
      curl, -X, PUT,
      'http://elasticsurgery-elasticsearch:9200/.elasticsurgery-clusters/cluster/_mapping',
      -H, 'Content-Type: application/json',
      -d@/opt/elasticsurgery/mappings/cluster.json
    ]

  - name: Push the .elasticsurgery-logs/log mapping
    conditions:
      dev: true
    containerContext: elasticsurgery
    command: [
      curl, -X, PUT,
      'http://elasticsurgery-elasticsearch:9200/.elasticsurgery-logs/log/_mapping',
      -H, 'Content-Type: application/json',
      -d@/opt/elasticsurgery/mappings/log.json
    ]

  - name: Write the dev cluster config fixture
    conditions:
      dev: true
    containerContext: elasticsurgery
    command: [
      curl, -X, PUT,
      'http://elasticsurgery-elasticsearch:9200/.elasticsurgery-clusters/_doc/local_development_cluster',
      -H, 'Content-Type: application/json',
      -d@/opt/elasticsurgery/fixtures/dev_cluster_config.json
    ]
