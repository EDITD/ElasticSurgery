networks:
  default:
    external: {name: dev}
services:
  elasticsearch:
    environment: [DEV_DRAWBRIDGE_WORKER=drawbridge-worker, DEV_MERCURY_MEMCACHE_1=mercury-memcache-1,
      DEV_DRAWBRIDGE_RABBITMQ=drawbridge-rabbitmq, DEV_DRAWBRIDGE_WEBSERVER=drawbridge-webserver,
      DEV_MERCURY_RABBITMQ=mercury-rabbitmq, DEV_WARDROBE_ELASTICSEARCH=wardrobe-elasticsearch,
      DEV_MEMCACHE_2=memcache-2, DEV_ELASTICSURGERY_ELASTICSEARCH=elasticsurgery-elasticsearch,
      DEV_MERCURY_MARIADB=mercury-mariadb, DEV_MERCURY_WEBSERVER=mercury-webserver,
      DEV_ELASTICSURGERY_WEBSERVER=elasticsurgery-webserver, DEV_MEMCACHE_1=memcache-1,
      DEV_DRAWBRIDGE_MARIADB=drawbridge-mariadb, DEV_DRESSING_ROOM_WEBSERVER=dressing_room-webserver,
      DEV_MERCURY_WORKER=mercury-worker]
    image: elasticsearch:6.8.3
    labels: {kubetools.project.env: dev, kubetools.project.name: elasticsurgery}
    networks:
      default:
        aliases: [elasticsurgery-elasticsearch]
    ports: ['26950:9200']
    stdin_open: true
    tty: true
  webserver:
    build: {context: ., dockerfile: docker/Dockerfile}
    command: [./backend/boot.py]
    environment: ['PYTHONPATH=$PYTHONPATH:/opt/elasticsurgery/backend', DEV_DRAWBRIDGE_WORKER=drawbridge-worker,
      DEV_MERCURY_MEMCACHE_1=mercury-memcache-1, DEV_DRAWBRIDGE_RABBITMQ=drawbridge-rabbitmq,
      DEV_DRAWBRIDGE_WEBSERVER=drawbridge-webserver, DEV_MERCURY_RABBITMQ=mercury-rabbitmq,
      DEV_WARDROBE_ELASTICSEARCH=wardrobe-elasticsearch, DEV_MEMCACHE_2=memcache-2,
      DEV_ELASTICSURGERY_ELASTICSEARCH=elasticsurgery-elasticsearch, DEV_MERCURY_MARIADB=mercury-mariadb,
      DEV_MERCURY_WEBSERVER=mercury-webserver, DEV_ELASTICSURGERY_WEBSERVER=elasticsurgery-webserver,
      DEV_MEMCACHE_1=memcache-1, DEV_DRAWBRIDGE_MARIADB=drawbridge-mariadb, DEV_DRESSING_ROOM_WEBSERVER=dressing_room-webserver,
      DEV_MERCURY_WORKER=mercury-worker]
    labels: {kubetools.project.env: dev, kubetools.project.name: elasticsurgery}
    networks:
      default:
        aliases: [elasticsurgery-webserver]
    ports: ['14406:80']
    stdin_open: true
    tty: true
    volumes: ['./:/opt/elasticsurgery']
version: '3'
